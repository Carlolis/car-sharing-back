module default {
  type TripGel {
    required name: str;
    required startDate: cal::local_date;
    required endDate: cal::local_date;
    distance: int64;
    required multi gelDrivers: PersonGel;
    comments: str;
  }

  type PersonGel {
    required name: str;
    multi drive_in := .<gelDrivers[is TripGel];
    invoice_in := .<gelPerson[is InvoiceGel];
  }

  type WriterGel {
    required name: str;
    multi chats : ChatSessionGel{
             constraint exclusive;
             on target delete allow;
    }
  }

  type ChatSessionGel {
      required title: str;
      multi messages: MessageGel{
               on source delete delete target;
               constraint exclusive;
      }
  }

  type MessageGel {
        required question: str;
        required answer: str;
  }

  type InvoiceGel {
    required name: str;
    required kind: str;
    mileage: int64;
    required date: cal::local_date;
    required amount: decimal;
    fileName: str;
    gelPerson: PersonGel;
    toDriver: PersonGel;
  }

  type MaintenanceGel {
      required type: str; # Type d entretien (ex:  "Vidange", "Contrôle des freins", "Contrôle Technique")
      required isCompleted: bool; # Indique si l entretien a été effectué
      dueMileage: int64; # Kilométrage auquel l entretien est dû (optionnel)
      dueDate: cal::local_date; # Date à laquelle l entretien est dû (optionnel)
      completedDate: cal::local_date; # Date de réalisation de l entretien (optionnel)
      completedMileage: int64; # Kilométrage au moment de la réalisation (optionnel)
      description: str; # Description de l entretien
      invoice: InvoiceGel; # Facture associée (optionnel)
  }

  type CarGel {
      required name: str;
      required mileage: int64;
  }

}
using extension ai;